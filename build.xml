<project name="arduino-cmdline" default="dist" basedir=".">
    <description>
        Command line arduino interface.
    </description>
    <!-- set global properties for this build -->
    
    <property name="project_name" value="arduino-cmdline"/>
    <property name="src" location="src"/>
    <property name="build" location="bin"/>
    <property name="dist"  location="dist"/>
    <property name="lib"  location="lib"/>
    <property name="res"  location="res"/>
    <property name="reports" location="reports"/>
    
    <!-- the names of various distributable files -->
    <property name="jar_name" value="${project_name}.jar"/>
    <property name="war_name" value="${project_name}.war"/>
    
    <!-- top level targets -->
    
    <target name="compile" depends="init" description="compile the source code " >
        <javac srcdir="${src}" destdir="${build}" includeantruntime="false">  
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
        
    </target>
    
    <target name="dist" depends="compile" description="generate the distributable files " >
        <jar destfile="${dist}/${jar_name}" filesetmanifest="mergewithoutmain">
            <manifest>
                <attribute name="Main-Class" value="processing.app.Commander"/>
                <attribute name="Class-Path" value="."/>
            </manifest>
            <fileset dir="${build}"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/core.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/ecj.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/jna.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/pde.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/RXTXcomm.jar"/>
        </jar>
    </target>
    
    <target name="clean" description="clean up" >
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${reports}"/>
    </target>
    
    <target name="run-tests" depends="compile" description="run your test suite" >
        
        <junit printsummary="yes" haltonfailure="yes" showoutput="yes" >
            <classpath>
                <pathelement path="${build}"/>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            	
            
            <batchtest fork="yes" todir="${reports}/raw/">
                <formatter type="xml"/>
                <fileset dir="${src}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
        	
    </target>
    
    <target name ="test" depends="run-tests">
        <junitreport todir="${reports}">
            <fileset dir="${reports}/raw/">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports}\html\"/>
        </junitreport>
    </target>
    
    <target name ="run" depends="" description="if this project can be run, run it" >
        <java jar="${dist}/${jar_name}" fork="true" />

    </target>
    
    <!-- supporting targets -->
    
    <target name="init" description="initialize the build environment" >
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create directory structures -->
        <mkdir dir="${build}"/>
        <mkdir dir="${lib}"/>
        <mkdir dir="${dist}/lib"/>
        <mkdir dir="${reports}"/>
        <mkdir dir="${reports}/raw/"/>
        <mkdir dir="${reports}/html/"/>
    </target>
    
    <target name="all" depends="clean, test">
        
    </target>
    
</project>

